{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/utils/calendar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateWrap = () => {\n  // 오늘 날짜의 요일을 구하기 위한 배열\n  const daysOfWeek = ['일', '월', '화', '수', '목', '금', '토'];\n\n  // 오늘 날짜의 요일을 구함 (0: 일요일, 1: 월요일, ..., 6: 토요일)\n  const today = new Date().getDay();\n\n  // 요일 순서를 오늘을 시작으로 배열을 회전시킴\n  const rotatedDaysOfWeek = [...daysOfWeek.slice(today), ...daysOfWeek.slice(0, today)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabWrap\",\n    children: rotatedDaysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"dateWrap slick-slide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date().getDate() + index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = DateWrap;\nexport default DateWrap;\nvar _c;\n$RefreshReg$(_c, \"DateWrap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DateWrap","daysOfWeek","today","Date","getDay","rotatedDaysOfWeek","slice","className","children","map","day","index","getDate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/utils/calendar.js"],"sourcesContent":["import React from 'react';\n\n\nconst DateWrap = () => {\n  // 오늘 날짜의 요일을 구하기 위한 배열\n  const daysOfWeek = ['일', '월', '화', '수', '목', '금', '토'];\n  \n  // 오늘 날짜의 요일을 구함 (0: 일요일, 1: 월요일, ..., 6: 토요일)\n  const today = new Date().getDay();\n\n  // 요일 순서를 오늘을 시작으로 배열을 회전시킴\n  const rotatedDaysOfWeek = [...daysOfWeek.slice(today), ...daysOfWeek.slice(0, today)];\n\n  return (\n    <div className='tabWrap'>\n      {rotatedDaysOfWeek.map((day, index) => (\n        <li key={index} className='dateWrap slick-slide'>\n          <p>{new Date().getDate() + index}</p>\n          <span>{day}</span>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nexport default DateWrap;\n\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAEtD;EACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;;EAEjC;EACA,MAAMC,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAACK,KAAK,CAACJ,KAAK,CAAC,EAAE,GAAGD,UAAU,CAACK,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;EAErF,oBACEH,OAAA;IAAKQ,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBH,iBAAiB,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAChCZ,OAAA;MAAgBQ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAC9CT,OAAA;QAAAS,QAAA,EAAI,IAAIL,IAAI,CAAC,CAAC,CAACS,OAAO,CAAC,CAAC,GAAGD;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCjB,OAAA;QAAAS,QAAA,EAAOE;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAFXL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GApBIjB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}