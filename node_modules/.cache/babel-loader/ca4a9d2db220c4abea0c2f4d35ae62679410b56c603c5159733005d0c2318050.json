{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // user 상태를 useMemo를 이용하여 메모이제이션\n  const isLoggedIn = useMemo(() => !!user, [user]);\n  if (!isLoggedIn) {\n    console.log('로그인이 필요한 페이지 입니다.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_s(ProtectedRoute, \"vuGzUy+izeRmvcttqeuU1uAkGKQ=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Route","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","element","Component","rest","_s","user","isLoggedIn","useMemo","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\n\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\n    \n    const { user } = useContext(AuthContext);\n\n // user 상태를 useMemo를 이용하여 메모이제이션\n const isLoggedIn = useMemo(() => !!user, [user]);\n\n if (!isLoggedIn) {\n   console.log('로그인이 필요한 페이지 입니다.');\n   return <Navigate to=\"/login\" />;\n }\n  \n    return <Route {...rest} element={<Component />} />;\n};\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAExD,MAAM;IAAEC;EAAK,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;;EAE3C;EACA,MAAMS,UAAU,GAAGC,OAAO,CAAC,MAAM,CAAC,CAACF,IAAI,EAAE,CAACA,IAAI,CAAC,CAAC;EAEhD,IAAI,CAACC,UAAU,EAAE;IACfE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,oBAAOV,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEG,oBAAOf,OAAA,CAACJ,KAAK;IAAA,GAAKQ,IAAI;IAAEF,OAAO,eAAEF,OAAA,CAACG,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtD,CAAC;AAACV,EAAA,CAbIJ,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAcpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}