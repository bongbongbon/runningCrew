{"ast":null,"code":"// src/utils/axiosInstance.js\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080'\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const isExpired = isTokenExpired(token);\n    if (isExpired) {\n      alert('Token has expired. Please log in again.');\n      // Redirect to login page or handle token expiration\n    } else {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;\nconst isTokenExpired = token => {\n  if (!token) return true;\n  const decoded = jwtDecode(token);\n  const currentTime = Date.now() / 1000;\n  return decoded.exp < currentTime;\n};","map":{"version":3,"names":["axios","jwtDecode","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","isExpired","isTokenExpired","alert","headers","Authorization","error","Promise","reject","decoded","currentTime","Date","now","exp"],"sources":["/Users/kimsubong/Desktop/hello/src/utils/axiosInstance.js"],"sourcesContent":["// src/utils/axiosInstance.js\nimport axios from 'axios';\nimport {jwtDecode} from 'jwt-decode';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080',\n});\n\naxiosInstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const isExpired = isTokenExpired(token);\n    if (isExpired) {\n      alert('Token has expired. Please log in again.');\n      // Redirect to login page or handle token expiration\n    } else {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport default axiosInstance;\n\nconst isTokenExpired = (token) => {\n  if (!token) return true;\n\n  const decoded = jwtDecode(token);\n  const currentTime = Date.now() / 1000;\n\n  return decoded.exp < currentTime;\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,YAAY;AAEpC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT,MAAMG,SAAS,GAAGC,cAAc,CAACJ,KAAK,CAAC;IACvC,IAAIG,SAAS,EAAE;MACbE,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF,CAAC,MAAM;MACLN,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUP,KAAK,EAAE;IAClD;EACF;EACA,OAAOD,MAAM;AACf,CAAC,EAAGS,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAef,aAAa;AAE5B,MAAMW,cAAc,GAAIJ,KAAK,IAAK;EAChC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,MAAMW,OAAO,GAAGnB,SAAS,CAACQ,KAAK,CAAC;EAChC,MAAMY,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;EAErC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}