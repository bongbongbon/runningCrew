{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/pages/SliderPage.js\";\nimport React from 'react';\nimport Slider from 'react-slick';\nimport '../css/FirstPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SampleNextArrow = props => {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      ...style,\n      display: 'block',\n      background: 'red'\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = SampleNextArrow;\nconst SamplePrevArrow = props => {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      ...style,\n      display: 'block',\n      background: 'green'\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SamplePrevArrow;\nconst WeekDays = () => {\n  const currentDate = new Date();\n  const week = ['일', '월', '화', '수', '목', '금', '토'];\n  const daysToShow = 14;\n  const days = [];\n  for (let i = 0; i < daysToShow; i++) {\n    const date = new Date();\n    date.setDate(currentDate.getDate() + i);\n    const formattedDate = `${date.getDate()}`;\n    const dayOfWeek = week[date.getDay()];\n    days.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"dateWrap isSun\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dayOfWeek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  }\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 7,\n    slidesToScroll: 7,\n    initialSlide: 0,\n    nextArrow: /*#__PURE__*/_jsxDEV(SampleNextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this),\n    // 사용자 정의 Next 버튼\n    prevArrow: /*#__PURE__*/_jsxDEV(SamplePrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this),\n    // 사용자 정의 Previous 버튼\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC77C\\uC8FC\\uC77C \\uB0A0\\uC9DC \\uD45C\\uC2DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c3 = WeekDays;\nexport default WeekDays;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SampleNextArrow\");\n$RefreshReg$(_c2, \"SamplePrevArrow\");\n$RefreshReg$(_c3, \"WeekDays\");","map":{"version":3,"names":["React","Slider","jsxDEV","_jsxDEV","SampleNextArrow","props","className","style","onClick","display","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","SamplePrevArrow","_c2","WeekDays","currentDate","Date","week","daysToShow","days","i","date","setDate","getDate","formattedDate","dayOfWeek","getDay","push","children","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","nextArrow","prevArrow","responsive","breakpoint","_c3","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/pages/SliderPage.js"],"sourcesContent":["import React from 'react';\nimport Slider from 'react-slick';\nimport '../css/FirstPage.css';\n\nconst SampleNextArrow = (props) => {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'block', background: 'red' }}\n      onClick={onClick}\n    />\n  );\n};\n\nconst SamplePrevArrow = (props) => {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'block', background: 'green' }}\n      onClick={onClick}\n    />\n  );\n};\n\nconst WeekDays = () => {\n  const currentDate = new Date();\n  const week = ['일', '월', '화', '수', '목', '금', '토'];\n  const daysToShow = 14;\n\n  const days = [];\n  for (let i = 0; i < daysToShow; i++) {\n    const date = new Date();\n    date.setDate(currentDate.getDate() + i);\n\n    const formattedDate = `${date.getDate()}`;\n    const dayOfWeek = week[date.getDay()];\n\n    days.push(\n      <li key={i} className=\"dateWrap isSun\">\n        <p>{formattedDate}</p>\n        <span>{dayOfWeek}</span>\n      </li>\n    );\n  }\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 7,\n    slidesToScroll: 7,\n    initialSlide: 0,\n    nextArrow: <SampleNextArrow />, // 사용자 정의 Next 버튼\n    prevArrow: <SamplePrevArrow />, // 사용자 정의 Previous 버튼\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 5,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>일주일 날짜 표시</h1>\n      <Slider {...settings}>\n        {days}\n      </Slider>\n    </div>\n  );\n};\n\nexport default WeekDays;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}