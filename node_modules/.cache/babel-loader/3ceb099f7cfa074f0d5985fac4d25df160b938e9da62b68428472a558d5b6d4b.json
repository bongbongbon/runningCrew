{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/runningCrew/src/pages/RunningUpdatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosInstance';\nimport DaumPostcode from \"react-daum-postcode\";\nimport Modal from 'react-modal';\nimport '../css/Running/RunningCreatePage.css';\nimport '../css/Common/Common.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst RunningUpdatePage = () => {\n  _s();\n  const [step, setStep] = useState(1); // 현재 단계\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [distance, setDistance] = useState('');\n  const [startLocation, setStartLocation] = useState('');\n  const [startDetailLocation, setStartDetailLocation] = useState('');\n  const [finishLocation, setFinishLocation] = useState('');\n  const [finishDetailLocation, setFinishDetailLocation] = useState('');\n  const [limitedPeople, setLimitedPeople] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [message, setMessage] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [addressType, setAddressType] = useState(''); // 추가: 주소 타입 구분용 상태\n\n  const navigate = useNavigate();\n  const handleNext = () => {\n    setStep(step + 1);\n  };\n  const handlePrevious = () => {\n    setStep(step - 1);\n  };\n  const handleAddressComplete = data => {\n    if (addressType === 'start') {\n      setStartLocation(data.address);\n    } else if (addressType === 'finish') {\n      setFinishLocation(data.address);\n    }\n    closeModal();\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axiosInstance.post('/api/runnings/create', {\n        title,\n        content,\n        distance,\n        startLocation,\n        startDetailLocation,\n        finishLocation,\n        finishDetailLocation,\n        limitedPeople,\n        date,\n        time\n      });\n      if (response.status === 200) {\n        setMessage(response.data);\n        alert('즐거운 런닝되세요~');\n        navigate('/');\n      }\n    } catch (error) {\n      setMessage(error.response.data.errorMessage);\n      alert(error.response.data.errorMessage);\n    }\n  };\n  const openModal = type => {\n    setModalIsOpen(true);\n    setAddressType(type);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(RunningUpdatePage, \"SsIo6xLNMujEfTs8kDIo1jbrp18=\", false, function () {\n  return [useNavigate];\n});\n_c = RunningUpdatePage;\nexport default RunningUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"RunningUpdatePage\");","map":{"version":3,"names":["React","useState","useNavigate","axiosInstance","DaumPostcode","Modal","jsxDEV","_jsxDEV","setAppElement","RunningUpdatePage","_s","step","setStep","title","setTitle","content","setContent","distance","setDistance","startLocation","setStartLocation","startDetailLocation","setStartDetailLocation","finishLocation","setFinishLocation","finishDetailLocation","setFinishDetailLocation","limitedPeople","setLimitedPeople","date","setDate","time","setTime","message","setMessage","modalIsOpen","setModalIsOpen","addressType","setAddressType","navigate","handleNext","handlePrevious","handleAddressComplete","data","address","closeModal","handleSubmit","event","preventDefault","response","post","status","alert","error","errorMessage","openModal","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/runningCrew/src/pages/RunningUpdatePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosInstance';\nimport DaumPostcode from \"react-daum-postcode\";\nimport Modal from 'react-modal';\nimport '../css/Running/RunningCreatePage.css';\nimport '../css/Common/Common.css';\n\nModal.setAppElement('#root');\n\nconst RunningUpdatePage = () => {\n  const [step, setStep] = useState(1); // 현재 단계\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [distance, setDistance] = useState('');\n  const [startLocation, setStartLocation] = useState('');\n  const [startDetailLocation, setStartDetailLocation] = useState('');\n  const [finishLocation, setFinishLocation] = useState('');\n  const [finishDetailLocation, setFinishDetailLocation] = useState('');\n  const [limitedPeople, setLimitedPeople] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [message, setMessage] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [addressType, setAddressType] = useState(''); // 추가: 주소 타입 구분용 상태\n\n\n\n  const navigate = useNavigate();\n\n  const handleNext = () => {\n    setStep(step + 1);\n  };\n\n  const handlePrevious = () => {\n    setStep(step - 1);\n  };\n\n  const handleAddressComplete = (data) => {\n    if(addressType === 'start') {\n      setStartLocation(data.address);\n    }else if(addressType === 'finish') {\n      setFinishLocation(data.address);\n    }\n    closeModal();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await axiosInstance.post('/api/runnings/create', {\n        title,\n        content,\n        distance,\n        startLocation,\n        startDetailLocation,\n        finishLocation,\n        finishDetailLocation,\n        limitedPeople,\n        date,\n        time\n      });\n\n      if (response.status === 200) {\n        setMessage(response.data);\n        alert('즐거운 런닝되세요~');\n        navigate('/');\n      }\n    } catch (error) {\n      setMessage(error.response.data.errorMessage);\n      alert(error.response.data.errorMessage);\n    }\n  };\n\n  const openModal = (type) => {\n    setModalIsOpen(true);\n    setAddressType(type);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n    </div>\n  );\n};\n\nexport default RunningUpdatePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}