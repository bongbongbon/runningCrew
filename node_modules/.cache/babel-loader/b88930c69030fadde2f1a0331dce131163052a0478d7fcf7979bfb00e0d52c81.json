{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/runningCrew/src/utils/daumAddress.js\";\nimport React, { useState } from 'react';\nimport DaumPostcode from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DaumAddress = () => {\n  // const[address, setAddress] = useState('');\n\n  const completeHandler = data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n    // setAddress(fullAddress);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DaumPostcode, {\n      onComplete: completeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = DaumAddress;\nexport default DaumAddress;\nvar _c;\n$RefreshReg$(_c, \"DaumAddress\");","map":{"version":3,"names":["React","useState","DaumPostcode","jsxDEV","_jsxDEV","DaumAddress","completeHandler","data","fullAddress","address","extraAddress","addressType","bname","buildingName","children","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/runningCrew/src/utils/daumAddress.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DaumPostcode from 'react-daum-postcode';\n\nconst DaumAddress = () => {\n    // const[address, setAddress] = useState('');\n\n    const completeHandler = (data) => {\n        let fullAddress = data.address;\n        let extraAddress = ''; \n\n        if(data.addressType === 'R') {\n            if(data.bname !== '') {\n                extraAddress += data.bname;\n            }\n\n            if(data.buildingName !== '') {\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n            }\n\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\n\n        }\n        // setAddress(fullAddress);\n    };\n\n    return (\n        <div>\n          <DaumPostcode onComplete={completeHandler} />\n        </div>\n      );\n\n}\nexport default DaumAddress;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB;;EAEA,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAC9B,IAAIC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAC9B,IAAIC,YAAY,GAAG,EAAE;IAErB,IAAGH,IAAI,CAACI,WAAW,KAAK,GAAG,EAAE;MACzB,IAAGJ,IAAI,CAACK,KAAK,KAAK,EAAE,EAAE;QAClBF,YAAY,IAAIH,IAAI,CAACK,KAAK;MAC9B;MAEA,IAAGL,IAAI,CAACM,YAAY,KAAK,EAAE,EAAE;QACzBH,YAAY,IAAKA,YAAY,KAAK,EAAE,GAAG,KAAKH,IAAI,CAACM,YAAY,EAAE,GAAGN,IAAI,CAACM,YAAa;MACxF;MAEAL,WAAW,IAAKE,YAAY,KAAK,EAAE,GAAG,KAAKA,YAAY,GAAG,GAAG,EAAG;IAEpE;IACA;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAU,QAAA,eACEV,OAAA,CAACF,YAAY;MAACa,UAAU,EAAET;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAGd,CAAC;AAAAC,EAAA,GA5BKf,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}