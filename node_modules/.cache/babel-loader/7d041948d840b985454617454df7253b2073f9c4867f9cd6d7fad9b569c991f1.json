{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // 현재 페이지\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\n  const pageSize = 10; // 페이지 당 보여질 아이템 수\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setBoards(response.data.data);\n        setTotalPages(Math.ceil(response.data.total / pageSize)); // 전체 페이지 수 설정\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 페이지 네비게이션 버튼을 렌더링하는 함수\n  const renderPaginationButtons = () => {\n    const pages = [];\n    const range = 2; // 현재 페이지를 중심으로 좌우로 표시될 페이지 버튼의 수\n\n    for (let i = Math.max(0, currentPage - range); i <= Math.min(currentPage + range, totalPages - 1); i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i),\n        disabled: currentPage === i,\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this));\n    }\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Board List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: board.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(0),\n        disabled: currentPage === 0,\n        children: \"\\uCC98\\uC74C \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 0,\n        children: \"\\uC774\\uC804 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), renderPaginationButtons(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages - 1,\n        children: \"\\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(totalPages - 1),\n        disabled: currentPage === totalPages - 1,\n        children: \"\\uB9C8\\uC9C0\\uB9C9 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardList, \"wsq0DLhFyMUdAUZy/Djs6sdxkK4=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","loading","setLoading","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","pageSize","fetchBoards","response","get","params","page","headers","Authorization","localStorage","getItem","data","Math","ceil","total","console","handlePageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPaginationButtons","pages","range","i","max","min","push","onClick","disabled","map","board","title","content","id","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst BoardList = () => {\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // 현재 페이지\n  const [totalPages, setTotalPages] = useState(0); // 전체 페이지 수\n  const pageSize = 10; // 페이지 당 보여질 아이템 수\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize,\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n\n        setBoards(response.data.data);\n        setTotalPages(Math.ceil(response.data.total / pageSize)); // 전체 페이지 수 설정\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 0 && newPage < totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  // 페이지 네비게이션 버튼을 렌더링하는 함수\n  const renderPaginationButtons = () => {\n    const pages = [];\n    const range = 2; // 현재 페이지를 중심으로 좌우로 표시될 페이지 버튼의 수\n\n    for (let i = Math.max(0, currentPage - range); i <= Math.min(currentPage + range, totalPages - 1); i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)} disabled={currentPage === i}>\n          {i + 1}\n        </button>\n      );\n    }\n\n    return pages;\n  };\n\n  return (\n    <div>\n      <h1>Board List</h1>\n      <ul>\n        {boards.map((board) => (\n          <li key={board.id}>\n            <h2>{board.title}</h2>\n            <p>{board.content}</p>\n          </li>\n        ))}\n      </ul>\n      <div>\n        {/* 페이지 네비게이션 UI */}\n        <button onClick={() => handlePageChange(0)} disabled={currentPage === 0}>\n          처음 페이지\n        </button>\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 0}>\n          이전 페이지\n        </button>\n        {renderPaginationButtons()}\n        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages - 1}>\n          다음 페이지\n        </button>\n        <button onClick={() => handlePageChange(totalPages - 1)} disabled={currentPage === totalPages - 1}>\n          마지막 페이지\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}