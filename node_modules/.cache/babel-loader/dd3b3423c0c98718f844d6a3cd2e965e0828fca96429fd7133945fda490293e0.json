{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // 현재 페이지\n  const pageSize = 10; // 페이지 당 보여질 아이템 수\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setBoards(response.data.data);\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, board.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardList, \"gOIJavHvhcB6uP/O3BHWaPItCx0=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","loading","setLoading","error","setError","currentPage","setCurrentPage","pageSize","fetchBoards","response","get","params","page","headers","Authorization","localStorage","getItem","data","console","handlePageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","board","title","id","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst BoardList = () => {\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // 현재 페이지\n  const pageSize = 10; // 페이지 당 보여질 아이템 수\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize,\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n\n        setBoards(response.data.data);\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {boards.map((board) => (\n          <li key={board.id}>\n            <h2>{board.title}</h2>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BoardList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAMc,QAAQ,GAAG,EAAE,CAAC,CAAC;;EAErBf,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,aAAa,CAACgB,GAAG,CAAC,kBAAkB,EAAE;UAC3DC,MAAM,EAAE;YACNC,IAAI,EAAEP,WAAW;YACjBE,QAAQ,EAAEA;UACZ,CAAC;UACDM,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QAEFhB,SAAS,CAACS,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOd,KAAK,EAAE;QACde,OAAO,CAACf,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDM,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,MAAMc,gBAAgB,GAAIC,OAAO,IAAK;IACpCd,cAAc,CAACc,OAAO,CAAC;EACzB,CAAC;EAED,IAAInB,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAItB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAyB,QAAA,EAAIlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,oBACE7B,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAAyB,QAAA,EACGtB,MAAM,CAAC2B,GAAG,CAAEC,KAAK,iBAChB/B,OAAA;QAAAyB,QAAA,eACEzB,OAAA;UAAAyB,QAAA,EAAKM,KAAK,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADfE,KAAK,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAvDID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}