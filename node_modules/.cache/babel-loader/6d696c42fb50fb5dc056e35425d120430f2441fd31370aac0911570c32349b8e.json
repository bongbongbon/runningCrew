{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/runningCrew/src/pages/Mypage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mypage = () => {\n  _s();\n  const [user, setUser] = useState('');\n  useEffect(() => {\n    console.log(selectedDate);\n    const fetchRunnings = async () => {\n      try {\n        const response = await axiosInstance.get('/api/runnings/get', {\n          params: {\n            date: selectedDate,\n            // 선택된 날짜로 API 호출\n            startLocation: selectedStartLocation,\n            minDistance: distance.min,\n            maxDistance: distance.max\n          }\n        });\n        setRunnings(response.data.data || []); // 데이터를 설정하고, 없으면 빈 배열로 초기화\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRunnings();\n  }, [selectedDate, selectedStartLocation, distance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC00\\uC790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Mypage, \"7ubZgTuJ1mJ9pAGlCb8lUkIZULE=\");\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","useContext","useState","useNavigate","jsxDEV","_jsxDEV","Mypage","_s","user","setUser","useEffect","console","log","selectedDate","fetchRunnings","response","axiosInstance","get","params","date","startLocation","selectedStartLocation","minDistance","distance","min","maxDistance","max","setRunnings","data","error","setError","setLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/runningCrew/src/pages/Mypage.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst Mypage = () => {\n    \n    const [user, setUser] = useState('');\n\n    useEffect(() => {\n        console.log(selectedDate);\n        const fetchRunnings = async () => {\n          try {\n            const response = await axiosInstance.get('/api/runnings/get', {\n              params: {\n                date: selectedDate, // 선택된 날짜로 API 호출\n                startLocation: selectedStartLocation,\n                minDistance: distance.min,\n                maxDistance: distance.max,\n              },\n            });\n            setRunnings(response.data.data || []); // 데이터를 설정하고, 없으면 빈 배열로 초기화\n          } catch (error) {\n            console.error('Error fetching boards:', error);\n            setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n          } finally {\n            setLoading(false);\n          }\n        };\n    \n        fetchRunnings();\n      }, [selectedDate, selectedStartLocation, distance]);\n    \n\n\n    return (\n        <div className='container'>\n            <p>가자</p>\n        </div>\n     \n    );\n};\n\nexport default Mypage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCQ,SAAS,CAAC,MAAM;IACZC,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;IACzB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAACC,GAAG,CAAC,mBAAmB,EAAE;UAC5DC,MAAM,EAAE;YACNC,IAAI,EAAEN,YAAY;YAAE;YACpBO,aAAa,EAAEC,qBAAqB;YACpCC,WAAW,EAAEC,QAAQ,CAACC,GAAG;YACzBC,WAAW,EAAEF,QAAQ,CAACG;UACxB;QACF,CAAC,CAAC;QACFC,WAAW,CAACZ,QAAQ,CAACa,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,SAAS;QACRC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDjB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,YAAY,EAAEQ,qBAAqB,EAAEE,QAAQ,CAAC,CAAC;EAIrD,oBACIlB,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtB5B,OAAA;MAAA4B,QAAA,EAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGd,CAAC;AAAC9B,EAAA,CApCID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}