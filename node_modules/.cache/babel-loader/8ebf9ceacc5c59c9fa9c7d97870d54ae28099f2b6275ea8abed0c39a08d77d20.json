{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/runningCrew/src/pages/RunningUpdatePage.js\",\n  _s = $RefreshSig$();\n// src/pages/RunningDetailPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosInstance';\nimport '../css/Running/RunningDetailPage.css'; // CSS 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunningUpdatePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [running, setRunning] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState('');\n  const navigate = useNavigate();\n  const [runningUsers, setRunningUsers] = useState([]);\n  // const [currentUserEmail, setCurrentUserEmail] = useState(null); // 현재 로그인한 사용자 이메일 상태 추가\n\n  // 런닝 게시판 데이터 가져오기\n  useEffect(() => {\n    const fetchRunningDetail = async () => {\n      try {\n        const response = await axiosInstance.get(`/api/runnings/get/${id}`);\n        setRunning(response.data.data); // API에서 반환하는 데이터 구조에 따라 설정\n        setUser(response.data.data.user);\n      } catch (error) {\n        console.error('Error fetching running detail:', error);\n        setError('런닝 상세 정보를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRunningDetail();\n  }, [id]);\n\n  // 런닝 참여하기\n  const handleJoinTeam = async () => {\n    try {\n      const response = await axiosInstance.post(`/api/runnings/users/join/${id}`);\n      console.log('Join team response:', response.data);\n      alert('팀에 성공적으로 합류했습니다.');\n      navigate('/');\n    } catch (error) {\n      console.error('Error joining team:', error);\n      alert(error.response.data.errorMessage);\n    }\n  };\n\n  // 런닝유저 불러오기\n  useEffect(() => {\n    const fetchRunningUsers = async () => {\n      try {\n        const response = await axiosInstance.post(`/api/runnings/users/get/${id}`);\n        setRunningUsers(response.data.data); // API에서 반환하는 데이터 구조에 따라 설정\n        console.log(response.data.data);\n      } catch (error) {\n        console.error('Error fetching running detail:', error);\n        setError('런닝 유저를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRunningUsers();\n  }, [id]);\n\n  // 수정 버튼 클릭 시 처리\n  const handleEdit = () => {\n    navigate(`/update/runnging/${id}`);\n  };\n\n  // 삭제 버튼 클릭 시 처리\n  const handleDelete = async () => {\n    try {\n      await axiosInstance.delete(`/api/runnings/delete/${id}`);\n      alert('런닝이 성공적으로 삭제되었습니다.');\n      navigate('/');\n    } catch (error) {\n      alert(error.response.data.errorMessage);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  if (!running) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Running not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n  const handlePageChange = path => {\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"running-detail-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(RunningUpdatePage, \"tzkilB/4UliIKyR0DUkwNot2JYw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RunningUpdatePage;\nexport default RunningUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"RunningUpdatePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axiosInstance","jsxDEV","_jsxDEV","RunningUpdatePage","_s","id","running","setRunning","loading","setLoading","error","setError","user","setUser","navigate","runningUsers","setRunningUsers","fetchRunningDetail","response","get","data","console","handleJoinTeam","post","log","alert","errorMessage","fetchRunningUsers","handleEdit","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","path","className","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/runningCrew/src/pages/RunningUpdatePage.js"],"sourcesContent":["// src/pages/RunningDetailPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosInstance';\nimport '../css/Running/RunningDetailPage.css'; // CSS 파일 import\n\n\nconst RunningUpdatePage = () => {\n  const { id } = useParams();\n  const [running, setRunning] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState('');\n  const navigate = useNavigate();\n  const [runningUsers, setRunningUsers] = useState([]);\n  // const [currentUserEmail, setCurrentUserEmail] = useState(null); // 현재 로그인한 사용자 이메일 상태 추가\n\n\n  \n\n  // 런닝 게시판 데이터 가져오기\n  useEffect(() => {\n    const fetchRunningDetail = async () => {\n      try {\n        const response = await axiosInstance.get(`/api/runnings/get/${id}`);\n        setRunning(response.data.data); // API에서 반환하는 데이터 구조에 따라 설정\n        setUser(response.data.data.user);\n\n\n      } catch (error) {\n        console.error('Error fetching running detail:', error);\n        setError('런닝 상세 정보를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRunningDetail();\n  }, [id]);\n\n  // 런닝 참여하기\n  const handleJoinTeam = async () => {\n    try {\n      const response = await axiosInstance.post(`/api/runnings/users/join/${id}`);\n      console.log('Join team response:', response.data);\n      alert('팀에 성공적으로 합류했습니다.');\n      navigate('/');\n    } catch (error) {\n      console.error('Error joining team:', error);\n      alert(error.response.data.errorMessage);\n    }\n  };\n\n  // 런닝유저 불러오기\n  useEffect(() => {\n    const fetchRunningUsers = async () => {\n      try {\n        const response = await axiosInstance.post(`/api/runnings/users/get/${id}`);\n        setRunningUsers(response.data.data); // API에서 반환하는 데이터 구조에 따라 설정\n        console.log(response.data.data);\n      } catch (error) {\n        console.error('Error fetching running detail:', error);\n        setError('런닝 유저를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRunningUsers();\n  }, [id]);\n\n\n\n    // 수정 버튼 클릭 시 처리\n    const handleEdit = () => {\n        navigate(`/update/runnging/${id}`)\n      };\n    \n      // 삭제 버튼 클릭 시 처리\n      const handleDelete = async () => {\n        try {\n          await axiosInstance.delete(`/api/runnings/delete/${id}`);\n          alert('런닝이 성공적으로 삭제되었습니다.');\n          navigate('/');\n        } catch (error) {\n          alert(error.response.data.errorMessage);\n        }\n      };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!running) {\n    return <p>Running not found.</p>;\n  }\n\n  const handlePageChange = (path) => {\n    navigate(path);\n}\n\n\n\n\n\n  return (\n    <div className=\"running-detail-container\">\n \n    </div>\n  );\n};\n\nexport default RunningUpdatePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}