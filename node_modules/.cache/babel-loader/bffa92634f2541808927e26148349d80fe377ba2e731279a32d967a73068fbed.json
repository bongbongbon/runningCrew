{"ast":null,"code":"var _jsxFileName = \"/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardList = () => {\n  _s();\n  const [boardList, setBoardList] = useState([]);\n  const [pageList, setPageList] = useState([]);\n  const [curPage, setCurPage] = useState(0); //현재 페이지 세팅\n  const [prevBlock, setPrevBlock] = useState(0); //이전 페이지 블록\n  const [nextBlock, setNextBlock] = useState(0); //다음 페이지 블록\n  const [lastPage, setLastPage] = useState(0); //마지막 페이지\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setBoardList(response.data.data);\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 페이지 네비게이션 버튼을 렌더링하는 함수\n  const renderPaginationButtons = () => {\n    const pages = [];\n    const range = 3; // 현재 페이지를 중심으로 좌우로 표시될 페이지 버튼의 수\n\n    // 이전 끝 버튼\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(0),\n      disabled: currentPage === 0,\n      children: \"\\uC774\\uC804 \\uB05D\"\n    }, \"prev-end\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this));\n\n    // 이전 페이지 버튼들\n    for (let i = Math.max(0, currentPage - range); i < currentPage; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    }\n\n    // 현재 페이지 버튼\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(currentPage),\n      disabled: true,\n      children: currentPage + 1\n    }, currentPage, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this));\n\n    // 다음 페이지 버튼들\n    for (let i = currentPage + 1; i <= Math.min(currentPage + range, totalPages - 1); i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this));\n    }\n\n    // 다음 끝 버튼\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(totalPages - 1),\n      disabled: currentPage === totalPages - 1,\n      children: \"\\uB2E4\\uC74C \\uB05D\"\n    }, \"next-end\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this));\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Board List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: board.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderPaginationButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardList, \"HZif8/7FAaUY6exZAa3YiH3p/90=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jsxDEV","_jsxDEV","BoardList","_s","boardList","setBoardList","pageList","setPageList","curPage","setCurPage","prevBlock","setPrevBlock","nextBlock","setNextBlock","lastPage","setLastPage","fetchBoards","response","get","params","page","currentPage","pageSize","headers","Authorization","localStorage","getItem","data","error","console","setError","setLoading","handlePageChange","newPage","setCurrentPage","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPaginationButtons","pages","range","push","onClick","disabled","i","Math","max","min","totalPages","boards","map","board","title","content","id","_c","$RefreshReg$"],"sources":["/Users/kimsubong/Desktop/hello/src/pages/BoardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst BoardList = () => {\n    const [boardList, setBoardList] = useState([]);\n    const [pageList, setPageList] = useState([]);\n\n    const [curPage, setCurPage] = useState(0); //현재 페이지 세팅\n    const [prevBlock, setPrevBlock] = useState(0); //이전 페이지 블록\n    const [nextBlock, setNextBlock] = useState(0); //다음 페이지 블록\n    const [lastPage, setLastPage] = useState(0); //마지막 페이지\n\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        const response = await axiosInstance.get('/api/boards/main', {\n          params: {\n            page: currentPage,\n            pageSize: pageSize,\n          },\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n\n        setBoardList(response.data.data);\n      } catch (error) {\n        console.error('Error fetching boards:', error);\n        setError('게시판 목록을 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBoards();\n  }, [currentPage]); // currentPage가 변경될 때마다 호출\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  // 페이지 네비게이션 버튼을 렌더링하는 함수\n  const renderPaginationButtons = () => {\n    const pages = [];\n    const range = 3; // 현재 페이지를 중심으로 좌우로 표시될 페이지 버튼의 수\n\n    // 이전 끝 버튼\n    pages.push(\n      <button key=\"prev-end\" onClick={() => handlePageChange(0)} disabled={currentPage === 0}>\n        이전 끝\n      </button>\n    );\n\n    // 이전 페이지 버튼들\n    for (let i = Math.max(0, currentPage - range); i < currentPage; i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>\n          {i + 1}\n        </button>\n      );\n    }\n\n    // 현재 페이지 버튼\n    pages.push(\n      <button key={currentPage} onClick={() => handlePageChange(currentPage)} disabled>\n        {currentPage + 1}\n      </button>\n    );\n\n    // 다음 페이지 버튼들\n    for (let i = currentPage + 1; i <= Math.min(currentPage + range, totalPages - 1); i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>\n          {i + 1}\n        </button>\n      );\n    }\n\n    // 다음 끝 버튼\n    pages.push(\n      <button key=\"next-end\" onClick={() => handlePageChange(totalPages - 1)} disabled={currentPage === totalPages - 1}>\n        다음 끝\n      </button>\n    );\n\n    return pages;\n  };\n\n  return (\n    <div>\n      <h1>Board List</h1>\n      <ul>\n        {boards.map((board) => (\n          <li key={board.id}>\n            <h2>{board.title}</h2>\n            <p>{board.content}</p>\n          </li>\n        ))}\n      </ul>\n      <div>\n        {/* 페이지 네비게이션 UI */}\n        {renderPaginationButtons()}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}